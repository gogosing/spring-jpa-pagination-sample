CREATE TABLE FLO_ALBUM (
	ALBUM_KEY            bigint GENERATED ALWAYS AS IDENTITY  NOT NULL,
	ALBUM_ID             char(14)   NOT NULL,
	TITLE                varchar(150)   NOT NULL,
	DELETED              boolean  DEFAULT 0 NOT NULL,
	CREATE_UTC           timestamp  DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CONSTRAINT "Pk_FLO_ALBUM_KEY" PRIMARY KEY ( ALBUM_KEY ),
	CONSTRAINT IDX_FLO_ALBUM_UNIQUE_ALBUM_ID UNIQUE ( ALBUM_ID )
 );

CREATE INDEX IDX_FLO_ALBUM_TITLE ON FLO_ALBUM ( TITLE );

COMMENT ON TABLE FLO_ALBUM IS '앨범 정보 테이블';

CREATE TABLE FLO_ALB_LOCALE (
	LOCALE_KEY           bigint GENERATED ALWAYS AS IDENTITY  NOT NULL,
	ALBUM_KEY            bigint   NOT NULL,
	LOCALE_CODE          char(3)   NOT NULL,
	CREATE_UTC           timestamp  DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CONSTRAINT "Pk_FLO_ALB_LOCALE_LOCALE_KEY" PRIMARY KEY ( LOCALE_KEY ),
	CONSTRAINT IDX_FLO_ALB_LOCALE_UNIQUE_LOCALE UNIQUE ( ALBUM_KEY, LOCALE_CODE )
 );

COMMENT ON TABLE FLO_ALB_LOCALE IS '앨범 서비스 가능 지역 코드 정보 테이블';

CREATE TABLE FLO_SONG (
	SONG_KEY             bigint GENERATED ALWAYS AS IDENTITY  NOT NULL,
	SONG_ID              char(14)   NOT NULL,
	ALBUM_KEY            bigint   NOT NULL,
	TITLE                varchar(150)   NOT NULL,
	LENGTH               integer   NOT NULL,
	TRACK_NO             tinyint   NOT NULL,
	DELETED              boolean  DEFAULT 0 NOT NULL,
	CREATE_UTC           timestamp  DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CONSTRAINT PK_FLO_SONGS_SONG_KEY PRIMARY KEY ( SONG_KEY ),
	CONSTRAINT IDX_FLO_SONG_UNIQUE_SONG_ID UNIQUE ( SONG_ID )
 );

CREATE INDEX IDX_FLO_SONG_FK_ALBUM_KEY ON FLO_SONG ( ALBUM_KEY );

CREATE INDEX IDX_FLO_SONG_TITLE ON FLO_SONG ( TITLE );

COMMENT ON TABLE FLO_SONG IS '곡 정보 테이블';

ALTER TABLE FLO_ALB_LOCALE ADD CONSTRAINT IDX_FLO_ALB_LOCALE_FK_ALBUM_KEY FOREIGN KEY ( ALBUM_KEY ) REFERENCES FLO_ALBUM( ALBUM_KEY );

ALTER TABLE FLO_SONG ADD CONSTRAINT IDX_FLO_SONG_FK_ALBUM_KEY FOREIGN KEY ( ALBUM_KEY ) REFERENCES FLO_ALBUM( ALBUM_KEY );
